server.port=8802
spring.rabbitmq.host = localhost
spring.rabbitmq.port = 5672
spring.rabbitmq.username = guest
spring.rabbitmq.password = guest

#bindings后配置的是SubscribableChannel（接收消息），项目启动会在rabbitmq中生成一个Queue
# destination配置的是要消费的交换机的名字，对应到rabbitmq中，会把生成的Queue绑定到destination后配置的交换机中
spring.cloud.stream.bindings.myinput.destination=myoutput
#自定义在rabbitmq中生成的Queue的名称,如果不定义为随机生成，多个消费者配置相同的group，则在rabbitmq中只生成一个Queue，在一个Queue中消息只能被一个消费者消费
spring.cloud.stream.bindings.myinput.group=myconsumer
#消息消费失败会重试，如果超过最大重试次数，则消息进入此队列的死信队列
spring.cloud.stream.rabbit.bindings.myinput.consumer.auto-bind-dlq=true
#DLQ队列中消息的存活时间，当超过配置时间之后，该消息会自动的从DLQ队列中移除，有些消息在业务上存在时效性，进入死信队列之后，过一段时间再处理已经没有意义
#spring.cloud.stream.rabbit.bindings.myinput.consumer.dlq-ttl=5000
#消息在进入到死信队列的时候，会在headers中加入错误信息
spring.cloud.stream.rabbit.bindings.myinput.consumer.republish-to-dlq=true

#测试延时消息
spring.cloud.stream.bindings.mydelayed.destination=mydelayed
#自定义在rabbitmq中生成的Queue的名称
spring.cloud.stream.bindings.mydelayed.group=mydelayed

